// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/kustomize/pkg/plugins (interfaces: LoaderFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ifc "sigs.k8s.io/kustomize/pkg/ifc"
	resource "sigs.k8s.io/kustomize/pkg/resource"
	transformers "sigs.k8s.io/kustomize/pkg/transformers"
)

// MockLoaderFactory is a mock of LoaderFactory interface
type MockLoaderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockLoaderFactoryMockRecorder
}

// MockLoaderFactoryMockRecorder is the mock recorder for MockLoaderFactory
type MockLoaderFactoryMockRecorder struct {
	mock *MockLoaderFactory
}

// NewMockLoaderFactory creates a new mock instance
func NewMockLoaderFactory(ctrl *gomock.Controller) *MockLoaderFactory {
	mock := &MockLoaderFactory{ctrl: ctrl}
	mock.recorder = &MockLoaderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoaderFactory) EXPECT() *MockLoaderFactoryMockRecorder {
	return m.recorder
}

// LoadGenerator mocks base method
func (m *MockLoaderFactory) LoadGenerator(arg0 ifc.Loader, arg1 *resource.Resource) (transformers.Generator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadGenerator", arg0, arg1)
	ret0, _ := ret[0].(transformers.Generator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadGenerator indicates an expected call of LoadGenerator
func (mr *MockLoaderFactoryMockRecorder) LoadGenerator(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadGenerator", reflect.TypeOf((*MockLoaderFactory)(nil).LoadGenerator), arg0, arg1)
}

// LoadTransformer mocks base method
func (m *MockLoaderFactory) LoadTransformer(arg0 ifc.Loader, arg1 *resource.Resource) (transformers.Transformer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadTransformer", arg0, arg1)
	ret0, _ := ret[0].(transformers.Transformer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadTransformer indicates an expected call of LoadTransformer
func (mr *MockLoaderFactoryMockRecorder) LoadTransformer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadTransformer", reflect.TypeOf((*MockLoaderFactory)(nil).LoadTransformer), arg0, arg1)
}
