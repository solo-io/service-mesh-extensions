steps:
- name: 'gcr.io/$PROJECT_ID/dep'
  args: ['ensure']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/service-mesh-hub'
  id: 'dep'

- name: 'gcr.io/$PROJECT_ID/go-make'
  entrypoint: 'bash'
  args: ['-c', 'tar -zvcf service-mesh-hub-dep.tar.gz ./gopath/pkg/dep']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/service-mesh-hub'
  - 'GOPATH=/workspace/gopath'
  id: 'create-dep-cache'

  # run all of the tests to fill the cache
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/service-mesh-hub'
  - 'GOPATH=/workspace/gopath'
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
  dir: './gopath/src/github.com/solo-io/service-mesh-hub'
  args: ['build', '-r', 'cli/pkg', 'pkg', 'test/e2e']
  waitFor: ['dep']
  id: 'test'

- name: 'gcr.io/$PROJECT_ID/go-make'
  entrypoint: 'bash'
  args: ['-c', 'tar -zvcf service-mesh-hub-gocache.tar.gz $(go env GOCACHE)']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/service-mesh-hub'
  - 'GOPATH=/workspace/gopath'
  id: 'create-go-cache'

- name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'service-mesh-hub-dep.tar.gz', 'gs://solo-public-cache/service-mesh-hub/service-mesh-hub-dep.tar.gz']
  waitFor: ['create-dep-cache']

- name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'service-mesh-hub-gocache.tar.gz', 'gs://solo-public-cache/service-mesh-hub/service-mesh-hub-gocache.tar.gz']
  waitFor: ['create-go-cache']

timeout: 6600s
tags: ['service-mesh-hub-cache']
options:
  machineType: 'N1_HIGHCPU_32'
